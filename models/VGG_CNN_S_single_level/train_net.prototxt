name: "VGG_CNN_S"

layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "attr"
  python_param {
    module: "data_layer.layer"
    layer: "DataLayer"
  }
}
########################## VGG CNN S ##########################
layer {
  bottom: "data"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
  param {
    lr_mult: 0.1
    decay_mult: 0.1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.2
  }
  convolution_param {
    num_output: 96
    kernel_size: 7
    stride: 2
  }
}
layer {
  bottom: "conv1"
  top: "conv1"
  name: "ReLU1"
  type: "ReLU"
}
layer {
  bottom: "conv1"
  top: "norm1"
  name: "norm1"
  type: "LRN"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
layer {
  bottom: "norm1"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}
layer {
  bottom: "pool1"
  top: "conv2"
  name: "conv2"
  type: "Convolution"
  param {
    lr_mult: 0.1
    decay_mult: 0.1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.2
  }
  convolution_param {
    num_output: 256
    kernel_size: 5
  }
}
layer {
  bottom: "conv2"
  top: "conv2"
  name: "ReLU2"
  type: "ReLU"
}
layer {
  bottom: "conv2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3"
  name: "conv3"
  type: "Convolution"
  param {
    lr_mult: 0.1
    decay_mult: 0.1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3"
  top: "conv3"
  name: "ReLU3"
  type: "ReLU"
}
layer {
  bottom: "conv3"
  top: "conv4"
  name: "conv4"
  type: "Convolution"
  param {
    lr_mult: 0.1
    decay_mult: 0.1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4"
  top: "conv4"
  name: "ReLU4"
  type: "ReLU"
}
layer {
  bottom: "conv4"
  top: "conv5"
  name: "conv5"
  type: "Convolution"
  param {
    lr_mult: 0.1
  }
  param {
    lr_mult: 0.2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5"
  top: "conv5"
  name: "ReLU5"
  type: "ReLU"
}
layer {
  bottom: "conv5"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}
########################## Extra Conv Layers ##########################
layer {
  bottom: "conv3"
  top: "conv3_e"
  name: "conv3_e"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
        type: "xavier"
    }
    bias_filler {
        type: "constant"
        value: 0
    }
    num_output: 512
    pad: 2
    kernel_size: 5
  }
}
layer {
  bottom: "conv3_e"
  top: "conv3_e"
  name: "ReLU3_e"
  type: "ReLU"
}
layer {
  bottom: "conv4"
  top: "conv4_e"
  name: "conv4_e"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
        type: "xavier"
    }
    bias_filler {
        type: "constant"
        value: 0
    }
    num_output: 512
    pad: 2
    kernel_size: 5
  }
}
layer {
  bottom: "conv4_e"
  top: "conv4_e"
  name: "ReLU4_e"
  type: "ReLU"
}
layer {
  bottom: "pool5"
  top: "conv5_e"
  name: "conv5_e"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
        type: "xavier"
    }
    bias_filler {
        type: "constant"
        value: 0
    }
    num_output: 512
    pad: 2
    kernel_size: 5
  }
}
layer {
  bottom: "conv5_e"
  top: "conv5_e"
  name: "ReLU5_e"
  type: "ReLU"
}
########################## Global Pooling Layers ##########################
layer {
  bottom: "conv3_e"
  top: "pool3_e"
  name: "pool3_e"
  type: "Pooling"
  pooling_param {
    pool: MAX
    global_pooling: 1
  }
}
layer {
  bottom: "conv4_e"
  top: "pool4_e"
  name: "pool4_e"
  type: "Pooling"
  pooling_param {
    pool: MAX
    global_pooling: 1
  }
}
layer {
  bottom: "conv5_e"
  top: "pool5_e"
  name: "pool5_e"
  type: "Pooling"
  pooling_param {
    pool: MAX
    global_pooling: 1
  }
}
########################## Synthesized Prediction Layers ##########################
layer {
  name: "concat"
  bottom: "pool3_e"
  bottom: "pool4_e"
  bottom: "pool5_e"
  top: "concat"
  type: "Concat"
}
layer {
  name: "relu_concat"
  bottom: "concat"
  top: "concat"
  type: "ReLU"
}
layer {
  bottom: "concat"
  top: "fc6"
  name: "fc6_e"
  type: "InnerProduct"
  param {
    lr_mult: 0.5
    decay_mult: 0.5
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    weight_filler {
        type: "gaussian"
	std: 0.005
    }
    bias_filler {
        type: "constant"
        value: 0.1
    }
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_e"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0.5
    decay_mult: 0.5
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 92
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
########################## Loss Layer ##########################
layer {
  bottom: "fc7"
  bottom: "attr"
  name: "loss"
  top: "loss"
  type: "SigmoidCrossEntropyLoss"
}
