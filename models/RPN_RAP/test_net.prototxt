# --------------------------------------------------------------------
# This file is part of
# Weakly-supervised Pedestrian Attribute Localization Network.
#
# Weakly-supervised Pedestrian Attribute Localization Network
# is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Weakly-supervised Pedestrian Attribute Localization Network
# is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Weakly-supervised Pedestrian Attribute Localization Network.
# If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

name: "RPN_PETA"

input: "data"

input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
########################## RPN ##########################
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
########################## Extra Conv Layers ##########################
layer {
  bottom: "conv3"
  top: "conv3_e"
  name: "conv3_e"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 2
    kernel_size: 5
  }
}
layer {
  bottom: "conv3_e"
  top: "conv3_e"
  name: "ReLU3_e"
  type: "ReLU"
}
layer {
  bottom: "conv4"
  top: "conv4_e"
  name: "conv4_e"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 2
    kernel_size: 5
  }
}
layer {
  bottom: "conv4_e"
  top: "conv4_e"
  name: "ReLU4_e"
  type: "ReLU"
}
layer {
  bottom: "pool5"
  top: "conv5_e"
  name: "conv5_e"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    pad: 2
    kernel_size: 5
  }
}
layer {
  bottom: "conv5_e"
  top: "conv5_e"
  name: "ReLU5_e"
  type: "ReLU"
}
########################## Global Pooling Layers ##########################
layer {
  bottom: "conv3_e"
  top: "pool3_e"
  name: "pool3_e"
  type: "Pooling"
  pooling_param {
    pool: MAX
    global_pooling: 1
  }
}
layer {
  bottom: "pool3_e"
  top: "pool3_e"
  name: "relu3_e"
  type: "ReLU"
}
layer {
  bottom: "conv4_e"
  top: "pool4_e"
  name: "pool4_e"
  type: "Pooling"
  pooling_param {
    pool: MAX
    global_pooling: 1
  }
}
layer {
  bottom: "pool4_e"
  top: "pool4_e"
  name: "relu4_e"
  type: "ReLU"
}
layer {
  bottom: "conv5_e"
  top: "pool5_e"
  name: "pool5_e"
  type: "Pooling"
  pooling_param {
    pool: MAX
    global_pooling: 1
  }
}
layer {
  bottom: "pool5_e"
  top: "pool5_e"
  name: "relu5_e"
  type: "ReLU"
}
########################## Independent FC Layers ##########################
layer {
  bottom: "pool3_e"
  top: "fc3_e"
  name: "fc3_e"
  type: "InnerProduct"
  param {
    lr_mult: 0.5
    decay_mult: 0.5
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    weight_filler {
        type: "gaussian"
        std: 0.005
    }
    bias_filler {
        type: "constant"
        value: 0.1
    }
    num_output: 512
  }
}
layer {
  bottom: "fc3_e"
  top: "fc3_e"
  name: "relu3_e"
  type: "ReLU"
}
layer {
  bottom: "pool4_e"
  top: "fc4_e"
  name: "fc4_e"
  type: "InnerProduct"
  param {
    lr_mult: 0.5
    decay_mult: 0.5
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    weight_filler {
        type: "gaussian"
        std: 0.005
    }
    bias_filler {
        type: "constant"
        value: 0.1
    }
    num_output: 512
  }
}
layer {
  bottom: "fc4_e"
  top: "fc4_e"
  name: "relu4_e"
  type: "ReLU"
}
layer {
  bottom: "pool5_e"
  top: "fc5_e"
  name: "fc5_e"
  type: "InnerProduct"
  param {
    lr_mult: 0.5
    decay_mult: 0.5
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    weight_filler {
        type: "gaussian"
        std: 0.005
    }
    bias_filler {
        type: "constant"
        value: 0.1
    }
    num_output: 1024
  }
}
layer {
  bottom: "fc5_e"
  top: "fc5_e"
  name: "relu5_e"
  type: "ReLU"
}
########################## Synthesis Layers ##########################
layer {
  name: "concat"
  bottom: "fc3_e"
  bottom: "fc4_e"
  bottom: "fc5_e"
  top: "concat"
  type: "Concat"
}
layer {
  bottom: "concat"
  top: "fc_syn1"
  name: "fc_syn1"
  type: "InnerProduct"
  inner_product_param {
    num_output: 2048
  }
}
layer {
  bottom: "fc_syn1"
  top: "fc_syn2"
  name: "fc_syn2"
  type: "InnerProduct"
  inner_product_param {
    num_output: 92
  }
}
########################## Loss Layers ##########################
layer {
  bottom: "fc_syn2"
  name: "pred"
  top: "pred"
  type: "Sigmoid"
}
