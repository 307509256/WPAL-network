name: "VGG_CNN_S"

layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "attr"
  python_param {
    module: "data_layer.layer"
    layer: "DataLayer"
  }
}

layer {
  bottom: "data"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
  convolution_param {
    num_output: 96
    kernel_size: 7
    stride: 2
  }
}
layer {
  bottom: "conv1"
  top: "conv1"
  name: "ReLU1"
  type: "ReLU"
}
layer {
  bottom: "conv1"
  top: "norm1"
  name: "norm1"
  type: "LRN"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
layer {
  bottom: "norm1"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}
layer {
  bottom: "pool1"
  top: "conv2"
  name: "conv2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 5
  }
}
layer {
  bottom: "conv2"
  top: "conv2"
  name: "ReLU2"
  type: "ReLU"
}
layer {
  bottom: "conv2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3"
  name: "conv3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3"
  top: "conv3"
  name: "ReLU3"
  type: "ReLU"
}
layer {
  bottom: "conv3"
  top: "conv4"
  name: "conv4"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4"
  top: "conv4"
  name: "ReLU4"
  type: "ReLU"
}
layer {
  bottom: "conv4"
  top: "conv5"
  name: "conv5"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5"
  top: "conv5"
  name: "ReLU5"
  type: "ReLU"
}
layer {
  bottom: "conv5"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}

layer {
  bottom: "conv3"
  top: "conv3_e"
  name: "conv3_e"
  type: "Convolution"
  convolution_param {
    num_output: 1
    pad: 2
    kernel_size: 5
  }
}
layer {
  bottom: "conv3_e"
  top: "conv3_e"
  name: "ReLU3_e"
  type: "ReLU"
}
layer {
  bottom: "conv3_e"
  top: "pool3_e"
  name: "pool3_e"
  type: "Pooling"
  pooling_param {
    pool: MAX
    global_pooling: 1
  }
}
layer {
  bottom: "conv4"
  top: "conv4_e"
  name: "conv4_e"
  type: "Convolution"
  convolution_param {
    num_output: 1
    pad: 2
    kernel_size: 5
  }
}
layer {
  bottom: "conv4_e"
  top: "conv4_e"
  name: "ReLU4_e"
  type: "ReLU"
}
layer {
  bottom: "conv4_e"
  top: "pool4_e"
  name: "pool4_e"
  type: "Pooling"
  pooling_param {
    pool: MAX
    global_pooling: 1
  }
}
layer {
  bottom: "conv5"
  top: "conv5_e"
  name: "conv5_e"
  type: "Convolution"
  convolution_param {
    num_output: 1
    pad: 2
    kernel_size: 5
  }
}
layer {
  bottom: "conv5_e"
  top: "conv5_e"
  name: "ReLU5_e"
  type: "ReLU"
}
layer {
  bottom: "conv5_e"
  top: "pool5_e"
  name: "pool5_e"
  type: "Pooling"
  pooling_param {
    pool: MAX
    global_pooling: 1
  }
}

layer {
  bottom: "pool3_e"
  top: "fc3_e"
  name: "fc3_e"
  type: "InnerProduct"
  inner_product_param {
    num_output: 92
  }
}
layer {
  bottom: "pool4_e"
  top: "fc4_e"
  name: "fc4_e"
  type: "InnerProduct"
  inner_product_param {
    num_output: 92
  }
}
layer {
  bottom: "pool5_e"
  top: "fc5_e"
  name: "fc5_e"
  type: "InnerProduct"
  inner_product_param {
    num_output: 92
  }
}

layer {
  bottom: "fc3_e"
  bottom: "attr"
  name: "cross_entropy_loss_3"
  top: "cross_entropy_loss_3"
  type: "SigmoidCrossEntropyLoss"
}
layer {
  bottom: "fc4_e"
  bottom: "attr"
  name: "cross_entropy_loss_4"
  top: "cross_entropy_loss_4"
  type: "SigmoidCrossEntropyLoss"
}
layer {
  bottom: "fc5_e"
  bottom: "attr"
  name: "cross_entropy_loss_5"
  top: "cross_entropy_loss_5"
  type: "SigmoidCrossEntropyLoss"
}

layer {
  name: "concat"
  bottom: "fc3_e"
  bottom: "fc4_e"
  bottom: "fc5_e"
  top: "concat"
  type: "Concat"
}

layer {
  bottom: "concat"
  top: "fc_total"
  name: "fc_total"
  type: "InnerProduct"
  inner_product_param {
    num_output: 92
  }
}

layer {
  bottom: "fc_total"
  bottom: "attr"
  name: "cross_entropy_loss_total"
  top: "cross_entropy_loss_total"
  type: "SigmoidCrossEntropyLoss"
}