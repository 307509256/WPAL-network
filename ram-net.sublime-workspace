{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"No",
				"NotImplementedError\terror"
			],
			[
				"track",
				"trackList"
			]
		]
	},
	"buffers":
	[
		{
			"file": "tools/test_net.py",
			"settings":
			{
				"buffer_size": 2739,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "tools/train_net.py",
			"settings":
			{
				"buffer_size": 2624,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/ram_net/test.py",
			"settings":
			{
				"buffer_size": 3731,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/utils/blob.py",
			"settings":
			{
				"buffer_size": 1619,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "# ------------------------------------------------"
			}
		},
		{
			"contents": "#!/usr/bin/env python\n\n# --------------------------------------------------------------------\n# This file is part of RAM Net.\n# \n# RAM Net is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n# \n# RAM Net is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n# \n# You should have received a copy of the GNU General Public License\n# along with RAM Net.  If not, see <http://www.gnu.org/licenses/>.\n# --------------------------------------------------------------------\n\nclass SolverWrapper(object):\n    \"\"\"A simple wrapper around Caffe's solver.\n    This wrapper gives us control over he snapshotting process, which we\n    use to unnormalize the learned bounding-box regression weights.\n    \"\"\"\n\n    def __init__(self, solver_prototxt, roidb, output_dir,\n                 pretrained_model=None):\n        \"\"\"Initialize the SolverWrapper.\"\"\"\n        self.output_dir = output_dir\n\n        self.solver = caffe.SGDSolver(solver_prototxt)\n        if pretrained_model is not None:\n            print ('Loading pretrained model '\n                   'weights from {:s}').format(pretrained_model)\n            self.solver.net.copy_from(pretrained_model)\n\n        self.solver_param = caffe_pb2.SolverParameter()\n        with open(solver_prototxt, 'rt') as f:\n            pb2.text_format.Merge(f.read(), self.solver_param)\n\n        self.solver.net.layers[0].set_roidb(roidb)\n\n    def snapshot(self):\n        \"\"\"Take a snapshot of the network.\n        \"\"\"\n        net = self.solver.net\n\n        infix = ('_' + cfg.TRAIN.SNAPSHOT_INFIX\n                 if cfg.TRAIN.SNAPSHOT_INFIX != '' else '')\n        filename = (self.solver_param.snapshot_prefix + infix +\n                    '_iter_{:d}'.format(self.solver.iter) + '.caffemodel')\n        filename = os.path.join(self.output_dir, filename)\n\n        net.save(str(filename))\n        print 'Wrote snapshot to: {:s}'.format(filename)\n\n        return filename\n\n    def train_model(self, max_iters):\n        \"\"\"Network training loop.\"\"\"\n        last_snapshot_iter = -1\n        timer = Timer()\n        model_paths = []\n        while self.solver.iter < max_iters:\n            # Make one SGD update\n            timer.tic()\n            self.solver.step(1)\n            timer.toc()\n            if self.solver.iter % (10 * self.solver_param.display) == 0:\n                print 'speed: {:.3f}s / iter'.format(timer.average_time)\n\n            if self.solver.iter % cfg.TRAIN.SNAPSHOT_ITERS == 0:\n                last_snapshot_iter = self.solver.iter\n                model_paths.append(self.snapshot())\n\n        if last_snapshot_iter != self.solver.iter:\n            model_paths.append(self.snapshot())\n        return model_paths\n\ndef train_net(solver_prototxt, roidb, output_dir,\n              pretrained_model=None, max_iters=40000):\n    \"\"\"Train a Fast R-CNN network.\"\"\"\n\n    roidb = filter_roidb(roidb)\n    sw = SolverWrapper(solver_prototxt, roidb, output_dir,\n                       pretrained_model=pretrained_model)\n\n    print 'Solving...'\n    model_paths = sw.train_model(max_iters)\n    print 'done solving'\n    return model_paths",
			"file": "lib/ram-net/train.py",
			"file_size": 3414,
			"file_write_time": 131190266752001858,
			"settings":
			{
				"buffer_size": 3414,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/ram_net/__init__.py",
			"settings":
			{
				"buffer_size": 820,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "tools/__init__.py",
			"settings":
			{
				"buffer_size": 1212,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/ram_net/train.py",
			"settings":
			{
				"buffer_size": 3425,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 1159,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/utils/timer.py",
			"settings":
			{
				"buffer_size": 947,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "# ------------------------------------------------"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 228,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 372.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 512.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '261dd1222b4693ce6d4f85f9c827ac06' + '6d5ab8ebdd020086947172a8a1356bb6'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/ssd/workspace/attr/ram-net",
		"/ssd/workspace/attr/ram-net/lib",
		"/ssd/workspace/attr/ram-net/lib/ram_net",
		"/ssd/workspace/attr/ram-net/lib/utils",
		"/ssd/workspace/attr/ram-net/tools"
	],
	"file_history":
	[
		"/ssd/workspace/attr/ram-net/caffe/src/gtest/gtest.h",
		"/ssd/workspace/attr/ram-net/caffe/Makefile.config",
		"/ssd/workspace/attr/ram-net/lib/utils/_init_paths.py",
		"/ssd/workspace/attr/ram-net/tools/_init_paths.py",
		"/ssd/workspace/attr/ram-net/lib/ram_net/_init_paths.py",
		"/ssd/workspace/attr/ram-net/caffe/python/CMakeLists.txt",
		"/ssd/workspace/attr/ram-net/caffe/python/caffe/_caffe.cpp",
		"/ssd/workspace/attr/ram-net/ram-net.sublime-project",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/src/CMakeLists.txt",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/test/Makefile",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/CMakeLists.txt",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/Makefile",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/CMakeLists",
		"/ssd/workspace/ISEE/LaS-VPE Platform/sbin/upload.sh",
		"/ssd/workspace/ISEE/LaS-VPE Platform/sbin/run-all.sh",
		"/ssd/workspace/ISEE/LaS-VPE Platform/pom.xml",
		"/home/ken/.ssh/authorized_keys",
		"/home/ken/.ssh/id_rsa",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/Release/makefile",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/Debug/src/subdir.mk",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/Debug/sources.mk",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/configure",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/configure.in",
		"/ssd/workspace/ISEE/LaS-VPE Platform/sbin/run-pedestrian-attr-recog-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE Platform/sbin/run-pedestrian-reid-using-attr-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE Platform/sbin/run-pedestrian-tracking-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/configure.ac",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/configure.scan",
		"/ssd/workspace/ISEE/LaS-VPE Platform/sbin/run-message-handling-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE Platform/sbin/run-data-managing-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE Platform/sbin/run-command-generating-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE Platform/sbin/run-basic-framework.sh",
		"/ssd/workspace/ISEE/Test/info (copy).txt",
		"/ssd/workspace/ISEE/LaS-VPE Platform/sbin/clean-checkpoints.sh",
		"/home/ken/Downloads/maven_example/Wrapper/native/jni/TestObject.cpp",
		"/home/ken/Downloads/maven_example/Wrapper/native/pom.xml",
		"/home/ken/Downloads/maven_example/pom.xml",
		"/home/ken/Downloads/maven_example/Application/pom.xml",
		"/ssd/workspace/ISEE/LaS-VPE Platform/Video-Decoder/Release/sources.mk",
		"/home/ken/Downloads/maven_example/Application/application.xml",
		"/home/ken/Downloads/maven_example/DISCLAIMER",
		"/ssd/workspace/ISEE/LaS-VPE Platform/sbin/check-slaves.sh",
		"/ssd/workspace/ISEE/LaS-VPE Platform/src/native-utils/LICENSE",
		"/ssd/workspace/ISEE/LaS-VPE Platform/sbin/run-pedestrian-reid-with-attr-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/src/native/Video-Decoder/.cproject",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/check-slaves.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/run-pedestrian-reid-using-attr-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/run-pedestrian-attr-recog-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/run-message-handling-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/run-data-managing-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/run-locally-messgae-handling-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/run-command-generating-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/run-basic-framework.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/upload.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/run-pedestrian-tracking-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/src/org/casia/cripac/isee/vpe/alg/tmp",
		"/home/ken/Downloads/javacv-bin/README.md",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/clean-checkpoints.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/run-pedestrian-reid-with-attr-app.sh",
		"/ssd/zhouyangtest/videodecoder/video_decoder/src/decoderjni.cpp",
		"/ssd/zhouyangtest/videodecoder/video_decoder/src/vpe_decoder.cpp",
		"/ssd/zhouyangtest/videodecoder/video_decoder/unittest/makefile",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/run-pedestrian-reid-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/run-data-feeding-app.sh",
		"/ssd/workspace/ISEE/LaS-VPE-Platform/sbin/run-metadata-saving-app.sh",
		"/ssd/workspace/ISEE/vpe-platform/src/native/src/tracker-2000-wrapper.cpp",
		"/ssd/workspace/ISEE/vpe-platform/.gitignore",
		"/ssd/zhouyangtest/videodecoder/video_decoder/src/bak/vpe_decoder.cpp",
		"/ssd/workspace/ISEE/vpe-platform/src/native/include/org_casia_cripac_isee_pedestrian_tracking_NativeTracker2000.h",
		"/ssd/zhouyangtest/videodecoder/video_decoder/src/vpe_avio_mem_context.h",
		"/ssd/zhouyangtest/videodecoder/video_decoder/src/decoderjni (copy).cpp",
		"/ssd/workspace/ISEE/vpe-platform/src/org_casia_cripac_isee_pedestrian_tracking_NativeTracker2000.h",
		"/ssd/workspace/ISEE/vpe-platform/src/native/include/basic_define.h",
		"/ssd/workspace/ISEE/vpe-platform/src/native/include/tracking_intf.h",
		"/ssd/workspace/ISEE/vpe-platform/sbin/run-command-generating-app.sh",
		"/ssd/workspace/ISEE/vpe-platform/sbin/run-message-handling-app.sh",
		"/ssd/workspace/ISEE/vpe-platform/sbin/run-metadata-saving-app.sh",
		"/ssd/workspace/ISEE/vpe-platform/sbin/run-pedestrian-attr-recog-app.sh",
		"/ssd/workspace/ISEE/vpe-platform/sbin/run-pedestrian-tracking-app.sh",
		"/ssd/workspace/ISEE/vpe-platform/sbin/run-locally-messgae-handling-app.sh",
		"/ssd/workspace/ISEE/vpe-platform/sbin/upload.sh",
		"/ssd/workspace/ISEE/vpe-platform/conf/system.properties",
		"/ssd/workspace/ISEE/vpe-platform/conf/spark-defaults.conf",
		"/etc/squid/squid.conf",
		"/ssd/workspace/ISEE/vpe-platform/sbin/check-slaves.sh",
		"/ssd/workspace/ISEE/vpe-platform/vpe-scheduler.xml",
		"/ssd/workspace/ISEE/VPE-Platform/sbin/run-metadata-saving-app.sh",
		"/ssd/workspace/ISEE/VPE-Platform/sbin/run-pedestrian-tracking-app.sh",
		"/ssd/workspace/ISEE/VPE-Platform/sbin/run-message-handling-app.sh",
		"/ssd/workspace/ISEE/VPE-Platform/sbin/run-locally-messgae-handling-app.sh",
		"/ssd/workspace/ISEE/VPE-Platform/sbin/run-pedestrian-attr-recog-app.sh",
		"/ssd/workspace/ISEE/VPE-Platform/sbin/run-command-generating-app.sh",
		"/home/ken/start-zookeeper.sh",
		"/home/ken/start-kafka.sh",
		"/home/ken/spark-1.6.1-bin-hadoop2.6/conf/spark-env.sh",
		"/ssd/workspace/ISEE/VPE-Platform/.gitignore",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/run-command-generating-app.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/.gitignore",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/run-pedestrian-attr-recog-app.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/run-message-handling-app.sh",
		"/etc/profile",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/run-metadata-saving-app.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/run-pedestrian-attr-recog.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/run-pedestrian-tracking.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/yarn/run-pedestrian-tracking.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/yarn/run-pedestrian-attr-recog.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/yarn/run-metadata-saving.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/yarn/run-main-controller.sh",
		"/usr/local/hadoop/etc/hadoop/hadoop-env.sh",
		"/home/ken/spark-1.6.1-bin-hadoop2.6/sbin/test-spark-on-yarn.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/local/run-main-controller.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/local/run-pedestrian-tracking.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/local/run-pedestrian-attr-recog.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/local/run-metadata-saving.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/local/run-local.sh",
		"/home/ken/workspace/ISEE/VPE-Platform/sbin/run-local.sh"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"test:",
			"test",
			"\"",
			"PedestrianAttrRecognizing",
			"bak",
			"vpe_decoder",
			"Pi"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\\\""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "tools/test_net.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2739,
						"regions":
						{
						},
						"selection":
						[
							[
								2331,
								2331
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 810.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "tools/train_net.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2624,
						"regions":
						{
						},
						"selection":
						[
							[
								1122,
								1122
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 360.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/ram_net/test.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3731,
						"regions":
						{
						},
						"selection":
						[
							[
								916,
								916
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 20.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/utils/blob.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1619,
						"regions":
						{
						},
						"selection":
						[
							[
								1619,
								1619
							]
						],
						"settings":
						{
							"auto_name": "# ------------------------------------------------",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/ram-net/train.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3414,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/ram_net/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 820,
						"regions":
						{
						},
						"selection":
						[
							[
								820,
								820
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "tools/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1212,
						"regions":
						{
						},
						"selection":
						[
							[
								1212,
								1212
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "lib/ram_net/train.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3425,
						"regions":
						{
						},
						"selection":
						[
							[
								3022,
								3022
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 855.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1159,
						"regions":
						{
						},
						"selection":
						[
							[
								1159,
								1159
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1035.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/utils/timer.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 947,
						"regions":
						{
						},
						"selection":
						[
							[
								947,
								947
							]
						],
						"settings":
						{
							"auto_name": "# ------------------------------------------------",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 228,
						"regions":
						{
						},
						"selection":
						[
							[
								112,
								112
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 156.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ram-net.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 208.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
